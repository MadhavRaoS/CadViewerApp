{"ast":null,"code":"var _jsxFileName = \"D:\\\\cad_viewer_app\\\\frontend\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./UploadForm.css\"; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = ({\n  onUpload\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileType, setFileType] = useState(\"\"); // Store file type\n  const [convertedFile, setConvertedFile] = useState(null);\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a file!\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/upload\", formData);\n      onUpload(response.data.filename);\n      setFileType(file.name.split(\".\").pop()); // Get file extension\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n    }\n  };\n  const handleConvert = async () => {\n    if (!fileType) return alert(\"Upload a file first!\");\n    const convertUrl = fileType === \"stl\" ? `http://127.0.0.1:5000/convert/stl-to-obj/${file.name}` : `http://127.0.0.1:5000/convert/obj-to-stl/${file.name}`;\n    try {\n      const response = await axios.get(convertUrl, {\n        responseType: \"blob\"\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      setConvertedFile(url);\n    } catch (error) {\n      console.error(\"Conversion failed:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0]),\n      className: \"file-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      className: \"upload-button\",\n      children: \"Upload Model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConvert,\n      className: \"convert-button\",\n      children: [\"Convert to \", fileType === \"stl\" ? \"OBJ\" : \"STL\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), convertedFile && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: convertedFile,\n      download: true,\n      className: \"download-link\",\n      children: \"Download Converted File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"O8cgdnFvajTMatUCrtFgqQA4fbo=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadForm","onUpload","_s","file","setFile","fileType","setFileType","convertedFile","setConvertedFile","handleUpload","alert","formData","FormData","append","response","post","data","filename","name","split","pop","error","console","handleConvert","convertUrl","get","responseType","url","window","URL","createObjectURL","Blob","className","children","type","onChange","e","target","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","download","_c","$RefreshReg$"],"sources":["D:/cad_viewer_app/frontend/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./UploadForm.css\"; // Import CSS file\r\n\r\nconst UploadForm = ({ onUpload }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [fileType, setFileType] = useState(\"\"); // Store file type\r\n  const [convertedFile, setConvertedFile] = useState(null);\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return alert(\"Please select a file!\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:5000/upload\", formData);\r\n      onUpload(response.data.filename);\r\n      setFileType(file.name.split(\".\").pop()); // Get file extension\r\n    } catch (error) {\r\n      console.error(\"Upload failed:\", error);\r\n    }\r\n  };\r\n\r\n  const handleConvert = async () => {\r\n    if (!fileType) return alert(\"Upload a file first!\");\r\n\r\n    const convertUrl = fileType === \"stl\"\r\n      ? `http://127.0.0.1:5000/convert/stl-to-obj/${file.name}`\r\n      : `http://127.0.0.1:5000/convert/obj-to-stl/${file.name}`;\r\n\r\n    try {\r\n      const response = await axios.get(convertUrl, { responseType: \"blob\" });\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      setConvertedFile(url);\r\n    } catch (error) {\r\n      console.error(\"Conversion failed:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <input\r\n        type=\"file\"\r\n        onChange={(e) => setFile(e.target.files[0])}\r\n        className=\"file-input\"\r\n      />\r\n      <button onClick={handleUpload} className=\"upload-button\">\r\n        Upload Model\r\n      </button>\r\n\r\n      {file && (\r\n        <button onClick={handleConvert} className=\"convert-button\">\r\n          Convert to {fileType === \"stl\" ? \"OBJ\" : \"STL\"}\r\n        </button>\r\n      )}\r\n\r\n      {convertedFile && (\r\n        <a href={convertedFile} download className=\"download-link\">\r\n          Download Converted File\r\n        </a>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}